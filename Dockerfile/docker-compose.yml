# DEVELOPPEMENT
version: '3.1'

services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    depends_on:
      - node
    container_name: nginx
    hostname: nginx
    networks:
      - network-node
    restart: on-failure
    ports:
      - 3000:80
  
  node:
    build:
      context: ./nodeJS
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - redis
    container_name: node
    hostname: node
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DB_USER=admin
      - DB_PASSWORD=root
      - DB_NAME=test
      - DB_HOST=devops_tp_postgres
      - DB_PORT=5432
      - REDIS_HOST=redis
    restart: on-failure
    networks:
      - network-db
      - network-node

  postgres:
    image: postgres:alpine
    depends_on:
      - redis
    container_name: postgres
    hostname: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: root
      POSTGRES_DB: test
      PGDATA: /data/postgres
    restart: on-failure    
    volumes:
      - ../pg-data:/data/postgres
    networks:
      - network-db

  redis:
    image: redis:alpine3.11
    container_name: redis
    restart: on-failure
    networks:
      - network-db

networks:
  network-db:
  network-node: